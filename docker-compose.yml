version: '3'
services:

  nginx:
    image: nginx
    container_name: ""
    volumes:
      - ./client/build/:/usr/share/nginx/html:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    links:
      - server:node_server
    depends_on:
      - "server"
    ports:
      - 8080:80
    networks:
      - backend

  client:
    image: node
    user: "node"
    working_dir: /home/node/app
    volumes:
      - ./client:/home/node/app
    ports:
      - 3000:3000
    command: "./entrypoint.sh"
    links:
      - server:node_server
    networks:
      - backend

  server:
    image: node
    user: "node"
    working_dir: /home/node/app
    volumes:
      - ./server:/home/node/app
    ports:
      - 3001:3000
    links:
      - db:db
      - redis:redis
    depends_on:
      - db
    networks:
      - backend
    environment:
      DB_PASSWORD: ${DB_PASSWORD}
      TWITTER_CONSUMER_KEY: ${TWITTER_CONSUMER_KEY}
      TWITTER_CONSUMER_SECRET: ${TWITTER_CONSUMER_SECRET}
    command: "./entrypoint.sh"

  db:
    image: postgres
    volumes:
      - dbdata:/var/lib/postgresql/data
    networks:
      - backend
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  db_admin:
    image: dpage/pgadmin4
    ports:
      - 8081:80
    links:
      - db:db
    networks:
      - backend
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}

  redis:
    image: redis
    networks:
      - backend

volumes:
  dbdata:

networks:
  backend:
